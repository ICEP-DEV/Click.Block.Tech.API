CREATE TABLE `Location` (
  `LocationID` INT AUTO_INCREMENT PRIMARY KEY,
  `StreetAddress` VARCHAR(255) NOT NULL,
  `Suburb` VARCHAR(100) NULL,
  `City` VARCHAR(100) NOT NULL,
  `Province` VARCHAR(100) NOT NULL,
  `PostalCode` VARCHAR(10) NULL,
  `Country` VARCHAR(100) NOT NULL DEFAULT 'South Africa',
  `latitude` VARCHAR(255) NULL,
  `longitude` VARCHAR(255) NULL
);
CREATE TABLE `Admin` (
    `AdminID` CHAR(13) PRIMARY KEY,
    `LastName` VARCHAR(100) NOT NULL,
    `FirstName` VARCHAR(100) NOT NULL,
    `PhoneNumber` VARCHAR(100) NOT NULL,
    `Address` VARCHAR(255) NOT NULL,
    `Email` VARCHAR(100) NOT NULL,
    `DateOfBirth` DATE NOT NULL,
    `LoginPin` VARCHAR(255) NOT NULL
);

CREATE TABLE `BankAccount` (
  `AccountID` INT AUTO_INCREMENT PRIMARY KEY,
  `AccountNr` VARCHAR(10) UNIQUE NOT NULL,
  `ExpirationDate` DATE NULL,
  `AccountType` VARCHAR(50) NOT NULL,
  `Balance` DECIMAL(10, 2) NOT NULL,
  `CreationDate` DATE NOT NULL,
  `isActive` TINYINT NOT NULL,
  `LastModified` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `RestorationCount` INT DEFAULT 0
);

CREATE TABLE `Customer` (
  `CustID_Nr` CHAR(13) PRIMARY KEY,
  `LastName` VARCHAR(100) NOT NULL,
  `FirstName` VARCHAR(100) NOT NULL,
  `PhoneNumber` VARCHAR(15) NULL,
  `Address` VARCHAR(255) NULL,
  `Email` VARCHAR(100) UNIQUE NOT NULL,
  `DateOfBirth` DATE NOT NULL,
  `LoginPin` VARCHAR(255) NOT NULL,  -- Hashed PIN
  `AlertPin` VARCHAR(255) NOT NULL,  -- Hashed PIN
  `isVerified` TINYINT(1) NOT NULL,
  `PanicButtonStatus` TINYINT(1) NOT NULL,
  `AccountID` INT NULL,  -- Nullable AccountID
  FOREIGN KEY (`AccountID`) REFERENCES `BankAccount`(`AccountID`)
);
CREATE TABLE `ContactMeMessage`(
    `MessageID` INT AUTO_INCREMENT PRIMARY KEY,
    `CustID_Nr` CHAR(13) NOT NULL,
    `FullNames` VARCHAR(100) NOT NULL,
    `PhoneNumber` VARCHAR(100) NOT NULL,
    `Email` VARCHAR(100) NOT NULL,
    `MessageDescription` VARCHAR (255) NULL,
    `Status` VARCHAR(10) NOT NULL,
    `AdminID` CHAR(13) NULL,
    FOREIGN KEY (`AdminID`) REFERENCES `Admin`(`AdminID`),
    FOREIGN KEY (`CustID_Nr`) REFERENCES `Customer`(`CustID_Nr`)
);

CREATE TABLE `BankCard` (
  `CardID` INT AUTO_INCREMENT PRIMARY KEY,
  `AccountID` INT NOT NULL,
  `CardNumber` VARCHAR(16) NOT NULL,
  `CardType` VARCHAR(50) NOT NULL,
  `ExpirationDate` DATE NOT NULL,
  `CVV` VARCHAR(3) NOT NULL,
  `IsActive` TINYINT NOT NULL,
  FOREIGN KEY (`AccountID`) REFERENCES `BankAccount`(`AccountID`)
);

CREATE TABLE `Transaction` (
  `TransactionID` INT AUTO_INCREMENT PRIMARY KEY,
  `AccountID` INT NOT NULL,
  `TransactionType` VARCHAR(50) NOT NULL,
  `TransactionDate` DATE NOT NULL,
  `TransactionAmount` DECIMAL(10, 2) NOT NULL,
  `Status` VARCHAR(50) NOT NULL,
  `IsPanicTrigered` BOOLEAN NULL,
  `LocationID` INT NOT NULL,
  FOREIGN KEY (`AccountID`) REFERENCES `BankAccount`(`AccountID`),
  FOREIGN KEY (`LocationID`) REFERENCES `Location`(`LocationID`)
);

CREATE TABLE `SupportingDocument` (
  `SuppDocsID` INT AUTO_INCREMENT PRIMARY KEY,
  `CustID_Nr` CHAR(13) NOT NULL,
  `ID_Document` VARCHAR(255) NOT NULL,
  `Selfie_With_ID` VARCHAR(255) NULL,
  FOREIGN KEY (`CustID_Nr`) REFERENCES `Customer`(`CustID_Nr`)
);

CREATE TABLE `Alert` (
  `AlertID` INT AUTO_INCREMENT PRIMARY KEY,
  `CustID_Nr` CHAR(13) NOT NULL,
  `AlertType` VARCHAR(50) NOT NULL,
  `SentDate` DATE NOT NULL,
  `LocationID` INT NOT NULL,
  `Receiver` VARCHAR(255) NOT NULL,
  `Message` TEXT NULL,
  FOREIGN KEY (`CustID_Nr`) REFERENCES `Customer`(`CustID_Nr`),
  FOREIGN KEY (`LocationID`) REFERENCES `Location`(`LocationID`)
);
CREATE TABLE `alertpinlogs` (
  `LogID` int(11) NOT NULL,
  `CustID_Nr` char(13) NOT NULL,
  `TriggerDate` datetime DEFAULT current_timestamp(),
  `Action` varchar(50) DEFAULT NULL,
  FOREIGN KEY (`CustID_Nr`) REFERENCES `Customer`(`CustID_Nr`)
);

CREATE TABLE `Notification` (
  `NotificationID` INT AUTO_INCREMENT PRIMARY KEY,
  `TransactionID` INT NOT NULL,
  `NotificationType` VARCHAR(50) NOT NULL,
  `SentDate` DATE NOT NULL,
  `Status` VARCHAR(50) NOT NULL,
  FOREIGN KEY (`TransactionID`) REFERENCES `Transaction`(`TransactionID`)
);
